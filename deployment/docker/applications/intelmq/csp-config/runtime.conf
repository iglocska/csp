{
    "csp-rest-api-output": {
        "description": "REST API is the bot responsible to send events to a CSP EMITTER REST API listener through POST.",
        "group": "Output",
        "module": "intelmq.bots.outputs.restapi.output",
        "name": "CSP EMITTER REST API",
        "parameters": {
            "auth_token": "<token>",
            "auth_token_name": "<token name>",
            "auth_type": "<http_basic_auth/http_header>",
            "hierarchical_output": false,
            "host": "http://csp-intelmq_adapter:8081/intelmq/v1/emitter",
            "use_json": true
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-file-collector": {
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": null,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/intelmq-fileinput",
            "postfix": ".json",
            "provider": "",
            "rate_limit": 60
        },
        "description": "CSP Fileinput collector fetches data from a file.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "File",
        "enabled": true,
        "run_mode": "continuous"
    },
    "cymru-whois-expert": {
        "description": "Cymry Whois (IP to ASN) is the bot responsible to add network information to the events (BGP, ASN, AS Name, Country, etc..).",
        "group": "Expert",
        "module": "intelmq.bots.experts.cymru_whois.expert",
        "name": "Cymru Whois",
        "parameters": {
            "redis_cache_db": 5,
            "redis_cache_host": "csp-redis",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "deduplicator-expert": {
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "csp-redis",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "file-output": {
        "description": "File is the bot responsible to send events to a file.",
        "group": "Output",
        "module": "intelmq.bots.outputs.file.output",
        "name": "File",
        "parameters": {
            "file": "/tmp/intelmq-fileoutput/events.txt",
            "hierarchical_output": false,
            "single_key": null
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "gethostbyname-1-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {},
        "enabled": true,
        "run_mode": "continuous"
    },
    "gethostbyname-2-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {},
        "enabled": true,
        "run_mode": "continuous"
    },
    "spamhaus-drop-collector": {
        "description": "",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Spamhaus Drop",
        "parameters": {
            "feed": "Spamhaus Drop",
            "http_password": null,
            "http_url": "https://www.spamhaus.org/drop/drop.txt",
            "http_username": null,
            "provider": "Spamhaus",
            "rate_limit": 3600,
            "ssl_client_certificate": null
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "spamhaus-drop-parser": {
        "description": "Spamhaus Drop Parser is the bot responsible to parse the DROP, EDROP, DROPv6, and ASN-DROP reports and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.spamhaus.parser_drop",
        "name": "Spamhaus Drop",
        "parameters": {},
        "enabled": true,
        "run_mode": "continuous"
    },
    "taxonomy-expert": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {},
        "enabled": true,
        "run_mode": "continuous"
    },
    "url2fqdn-expert": {
        "description": "url2fqdn is the bot responsible to parsing the fqdn from the url.",
        "group": "Expert",
        "module": "intelmq.bots.experts.url2fqdn.expert",
        "name": "url2fqdn",
        "parameters": {
            "load_balance": true,
            "overwrite": false
        },
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-api-last-collector": {
        "parameters": {
            "feed": "",
            "provider": "",
            "http_url": "https://cve.circl.lu/api/last/",
            "http_url_formatting": false,
            "http_username": null,
            "http_password": null,
            "ssl_client_certificate": null,
            "extract_file": "True or string of file names separated by ,",
            "rate_limit": 3600
        },
        "name": "Generic URL Fetcher",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "description": "Generic CVE URL Fetcher is the bot responsible to get the report from an cve last api.",
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-parser": {
        "parameters": {},
        "name": "CVE server",
        "group": "Parser",
        "module": "intelmq.bots.parsers.cve.parser_cve_server",
        "description": "CVE server Parser is the bot responsible to parse the report and sanitize the information in MISP event format",
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-deduplicator-expert": {
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "redis",
            "redis_cache_port": 6379,
            "redis_cache_password": null,
            "redis_cache_ttl": 86400
        },
        "name": "Deduplicator",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-scraping-cvenew-twitter-collector": {
        "parameters": {
            "feed": "",
            "provider": "",
            "http_url": "https://twitter.com/CVEnew/",
            "http_url_formatting": false,
            "http_username": null,
            "http_password": null,
            "ssl_client_certificate": null,
            "extract_file": "True or string of file names separated by ,",
            "rate_limit": 3600
        },
        "name": "Generic URL Fetcher",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "description": "Generic URL Fetcher is the bot responsible to get the report from an https://twitter.com/CVEnew/.",
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-scraping-cvenew-twitter-parser": {
        "parameters": {},
        "name": "CVE scraping",
        "group": "Parser",
        "module": "intelmq.bots.parsers.cve.parser_cve_scraping",
        "description": "CVE scraping Parser is the bot responsible to parse the reports from twitter page https://twitter.com/CVEnew/.",
        "enabled": true,
        "run_mode": "continuous"
    },
    "csp-cve-scraping-cvenew-deduplicator-expert": {
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "csp-redis",
            "redis_cache_port": 6379,
            "redis_cache_password": null,
            "redis_cache_ttl": 86400
        },
        "name": "Deduplicator",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "enabled": true,
        "run_mode": "continuous"
    }
}